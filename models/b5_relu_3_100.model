hybrid reachability
{
state var x1, x2, x3, a, clock
setting
{
fixed steps 0.01
time 150
remainder estimation 1e-6
identity precondition
matlab octagon x1,x2
adaptive orders { min 3, max 8 }
cutoff 1e-17
precision 100
output b5_relu_3_100
max jumps 8
print on
}
modes
{
b5_sys
{
nonpoly ode
{
x1' = (x3 * x3 * x3 - x2)
x2' = x3
x3' = a
a' = 0.0
clock' = 1.0
}
inv
{
clock <= 0.2
}
}
}
jumps
{
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  -5.0 - x3 <= 0  x3 <= -2.5  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.5 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.5 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.4999993 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  2.5 - x3 <= 0  x3 <= 5.0  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.49999496 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  -5.0 - x3 <= 0  x3 <= -2.5  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.5 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.5 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.4999999 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  2.5 - x3 <= 0  x3 <= 5.0  }
reset
{
a' := -0.49999982 + 0.5 * x1 + -0.5 * x2 + -0.4999916 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  -5.0 - x3 <= 0  x3 <= -2.5  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.5 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.5 + 0.5 * x1 + -0.5 * x2 + -0.49999994 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.49996266 + 0.5 * x1 + -0.49999997 * x2 + 0.4997628 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  2.5 - x3 <= 0  x3 <= 5.0  }
reset
{
a' := -0.49999216 + 0.49999902 * x1 + -0.5 * x2 + -0.37790906 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  -5.0 - x3 <= 0  x3 <= -2.5  }
reset
{
a' := -0.499424 + 0.5 * x1 + -0.4999961 * x2 + 0.22176473 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.49993274 + 0.49680185 * x1 + -0.49999875 * x2 + -0.49774274 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.4999998 + 0.49861816 * x1 + -0.5 * x2 + -0.499997 * x3
clock' := 0.0
}
interval aggregation
b5_sys -> b5_sys
guard
{
clock = 0.2  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  2.5 - x3 <= 0  x3 <= 5.0  }
reset
{
a' := -0.5 + 0.49983373 * x1 + -0.5 * x2 + -0.49999997 * x3
clock' := 0.0
}
interval aggregation
}
init
{
b5_sys
{
x1 in [0.38, 0.4]
x2 in [0.45, 0.47]
x3 in [0.25, 0.27]
a in [0, 0]
clock in [0.2, 0.2]
}
}
}