hybrid reachability
{
state var x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, t, a1, a2, a3, clock
setting
{
fixed steps 0.0005
time 150
remainder estimation 1e-4
identity precondition
gnuplot octagon t,x3
adaptive orders { min 3, max 8 }
cutoff 1e-12
precision 150
output quad2
max jumps 15
print on
}
modes
{
quad_sys
{
nonpoly ode
{
x1' = cos(x8)*cos(x9)*x4 + (sin(x7)*sin(x8)*cos(x9) - cos(x7)*sin(x9))*x5 + (cos(x7)*sin(x8)*cos(x9) + sin(x7)*sin(x9))*x6
x2' = cos(x8)*sin(x9)*x4 + (sin(x7)*sin(x8)*sin(x9) + cos(x7)*cos(x9))*x5 + (cos(x7)*sin(x8)*sin(x9) - sin(x7)*cos(x9))*x6
x3' = sin(x8)*x4 - sin(x7)*cos(x8)*x5 - cos(x7)*cos(x8)*x6
x4' = x12*x5 - x11*x6 - 9.81*sin(x8)
x5' = x10*x6 - x12*x4 + 9.81*cos(x8)*sin(x7)
x6' = x11*x4 - x10*x5 + 9.81*cos(x8)*cos(x7) - 9.81 - a1 / 1.4
x7' = x10 + (sin(x7)*(sin(x8)/cos(x8)))*x11 + (cos(x7)*(sin(x8)/cos(x8)))*x12
x8' = cos(x7)*x11 - sin(x7)*x12
x9' = (sin(x7)/cos(x8))*x11 + (cos(x7)/cos(x8))*x12
x10' = -0.92592592592593*x11*x12 + 18.51851851851852*a2
x11' = 0.92592592592593*x10*x12 + 18.51851851851852*a3
x12' = 0
t' = 1
a1' = 0.0
a2' = 0.0
a3' = 0.0
clock' = 1.0
}
inv
{
clock <= 0.05
}
}
}
jumps
{
quad_sys -> quad_sys
guard
{
clock = 0.05  -30.0 - x1 <= 0  x1 <= 30.0  -30.0 - x2 <= 0  x2 <= 30.0  -30.0 - x3 <= 0  x3 <= 30.0  -30.0 - x4 <= 0  x4 <= 30.0  -30.0 - x5 <= 0  x5 <= 30.0  -30.0 - x6 <= 0  x6 <= 30.0  -30.0 - x7 <= 0  x7 <= 30.0  -30.0 - x8 <= 0  x8 <= 30.0  -30.0 - x9 <= 0  x9 <= 30.0  -30.0 - x10 <= 0  x10 <= 30.0  -30.0 - x11 <= 0  x11 <= 30.0  -30.0 - x12 <= 0  x12 <= 30.0  }
reset
{
a1' := 0.5477479 + 4.977613 * x1 + -4.652856 * x2 + 4.9590645 * x3 + -1.2406878 * x4 + 0.4947121 * x5 + 0.8247713 * x6 + 2.8644192 * x7 + 3.9584398 * x8 + -4.532359 * x9 + 0.25217336 * x10 + 1.2596645 * x11 + -4.8012223 * x12
a2' := 0.118075624 + 0.18578786 * x1 + -0.033284288 * x2 + -0.3745219 * x3 + -0.0570756 * x4 + -0.32391667 * x5 + -0.37366003 * x6 + -1.0206587 * x7 + -0.6376484 * x8 + -0.13356014 * x9 + -0.65570503 * x10 + 0.1825313 * x11 + 3.503612 * x12
a3' := 1.0100667 + -0.85697544 * x1 + 1.1490589 * x2 + -0.61013573 * x3 + 0.34928796 * x4 + 0.2048521 * x5 + -0.040493168 * x6 + -1.0724521 * x7 + -1.3549544 * x8 + 1.6494833 * x9 + -0.19495799 * x10 + -1.0745766 * x11 + -0.34615272 * x12

clock' := 0.0
}
interval aggregation
}
init
{
quad_sys
{
x1 in [0.35, 0.4]
x2 in [0.35, 0.4]
x3 in [0.35, 0.4]
x4 in [0.35, 0.4]
x5 in [0.35, 0.4]
x6 in [0.35, 0.4]
x7 in [0, 0]
x8 in [0, 0]
x9 in [0, 0]
x10 in [0, 0]
x11 in [0, 0]
x12 in [0, 0]
t in [0, 0]
a1 in [0, 0]
a2 in [0, 0]
a3 in [0, 0]
clock in [0.05, 0.05]
}
}
}
