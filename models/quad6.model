hybrid reachability
{
state var x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, t, a1, a2, a3, clock
setting
{
fixed steps 0.0002
time 150
remainder estimation 1e-4
identity precondition
gnuplot octagon t,x3
adaptive orders { min 3, max 8 }
cutoff 1e-10
precision 150
output quad6
max jumps 14
print on
}
modes
{
quad_sys
{
nonpoly ode
{
x1' = cos(x8)*cos(x9)*x4 + (sin(x7)*sin(x8)*cos(x9) - cos(x7)*sin(x9))*x5 + (cos(x7)*sin(x8)*cos(x9) + sin(x7)*sin(x9))*x6
x2' = cos(x8)*sin(x9)*x4 + (sin(x7)*sin(x8)*sin(x9) + cos(x7)*cos(x9))*x5 + (cos(x7)*sin(x8)*sin(x9) - sin(x7)*cos(x9))*x6
x3' = sin(x8)*x4 - sin(x7)*cos(x8)*x5 - cos(x7)*cos(x8)*x6
x4' = x12*x5 - x11*x6 - 9.81*sin(x8)
x5' = x10*x6 - x12*x4 + 9.81*cos(x8)*sin(x7)
x6' = x11*x4 - x10*x5 + 9.81*cos(x8)*cos(x7) - 9.81 - a1 / 1.4
x7' = x10 + (sin(x7)*(sin(x8)/cos(x8)))*x11 + (cos(x7)*(sin(x8)/cos(x8)))*x12
x8' = cos(x7)*x11 - sin(x7)*x12
x9' = (sin(x7)/cos(x8))*x11 + (cos(x7)/cos(x8))*x12
x10' = -0.92592592592593*x11*x12 + 18.51851851851852*a2
x11' = 0.92592592592593*x10*x12 + 18.51851851851852*a3
x12' = 0
t' = 1
a1' = 0.0
a2' = 0.0
a3' = 0.0
clock' = 1.0
}
inv
{
clock <= 0.05
}
}
}
jumps
{
quad_sys -> quad_sys
guard
{
clock = 0.05  -30.0 - x1 <= 0  x1 <= 30.0  -30.0 - x2 <= 0  x2 <= 30.0  -30.0 - x3 <= 0  x3 <= 30.0  -30.0 - x4 <= 0  x4 <= 30.0  -30.0 - x5 <= 0  x5 <= 30.0  -30.0 - x6 <= 0  x6 <= 30.0  -30.0 - x7 <= 0  x7 <= 30.0  -30.0 - x8 <= 0  x8 <= 30.0  -30.0 - x9 <= 0  x9 <= 30.0  -30.0 - x10 <= 0  x10 <= 30.0  -30.0 - x11 <= 0  x11 <= 30.0  -30.0 - x12 <= 0  x12 <= 30.0  }
reset
{
a1' := 4.0248656 + -0.4545644 * x1 + -0.547438 * x2 + 1.2476978 * x3 + 0.08677956 * x4 + -0.3902719 * x5 + 0.89478964 * x6 + -0.22404441 * x7 + 1.7432077 * x8 + -0.5906773 * x9 + -0.01961645 * x10 + -0.36957717 * x11 + -4.7075677 * x12
a2' := 0.26622888 + 0.064670675 * x1 + 1.4287819 * x2 + -3.1776917 * x3 + -0.03170878 * x4 + -0.516104 * x5 + -0.7878944 * x6 + -0.99076843 * x7 + -0.80478364 * x8 + 0.93368375 * x9 + -1.2610656 * x10 + 0.49985978 * x11 + 0.45299593 * x12
a3' := 0.7605927 + 0.12542966 * x1 + -0.08449122 * x2 + -0.81004375 * x3 + 0.42140627 * x4 + -0.100568846 * x5 + -0.42446166 * x6 + 0.19111075 * x7 + 0.636383 * x8 + 0.4421783 * x9 + 0.23632339 * x10 + -0.9254819 * x11 + 4.73558 * x12

clock' := 0.0
}
interval aggregation
}
init
{
quad_sys
{
x1 in [0.35, 0.4]
x2 in [0.35, 0.4]
x3 in [0.35, 0.4]
x4 in [0.35, 0.4]
x5 in [0.35, 0.4]
x6 in [0.35, 0.4]
x7 in [0, 0]
x8 in [0, 0]
x9 in [0, 0]
x10 in [0, 0]
x11 in [0, 0]
x12 in [0, 0]
t in [0, 0]
a1 in [0, 0]
a2 in [0, 0]
a3 in [0, 0]
clock in [0.05, 0.05]
}
}
}