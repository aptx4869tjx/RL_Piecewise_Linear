hybrid reachability
{
state var x1, x2, x3, a, clock
setting
{
fixed steps 0.005
time 150
remainder estimation 1e-6
identity precondition
matlab octagon x1,x2
adaptive orders { min 3, max 8 }
cutoff 1e-17
precision 100
output b4_relu_3_100
max jumps 7
print on
}
modes
{
b4_sys
{
nonpoly ode
{
x1' = (-x1 + x2 - x3)
x2' = (-x1 * (x3 + 1) - x2)
x3' = (-x1 + a)
a' = 0.0
clock' = 1.0
}
inv
{
clock <= 0.1
}
}
}
jumps
{
b4_sys -> b4_sys
guard
{
clock = 0.1  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.0008654893 + -0.00065033505 * x1 + -0.0006207185 * x2 + -0.0006422169 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  -2.5 - x1 <= 0  x1 <= 0.0  -2.5 - x2 <= 0  x2 <= 0.0  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.0008827108 + -0.0006570322 * x1 + -0.00060667546 * x2 + -0.00064494106 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.0008495442 + -0.0006460267 * x1 + -0.0005997206 * x2 + -0.0006444452 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  -2.5 - x1 <= 0  x1 <= 0.0  0.0 - x2 <= 0  x2 <= 2.5  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.00088223466 + -0.00066479936 * x1 + -0.0006019661 * x2 + -0.00064138277 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.0008684946 + -0.00064869237 * x1 + -0.00062900217 * x2 + -0.00062808575 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  0.0 - x1 <= 0  x1 <= 2.5  -2.5 - x2 <= 0  x2 <= 0.0  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.0008977121 + -0.0006619414 * x1 + -0.0006127375 * x2 + -0.0006465591 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  -2.5 - x3 <= 0  x3 <= 0.0  }
reset
{
a' := -0.00085973984 + -0.0006537619 * x1 + -0.00060394435 * x2 + -0.00064183975 * x3
clock' := 0.0
}
interval aggregation
b4_sys -> b4_sys
guard
{
clock = 0.1  0.0 - x1 <= 0  x1 <= 2.5  0.0 - x2 <= 0  x2 <= 2.5  0.0 - x3 <= 0  x3 <= 2.5  }
reset
{
a' := -0.00088732166 + -0.0006693233 * x1 + -0.00060117606 * x2 + -0.0006425832 * x3
clock' := 0.0
}
interval aggregation
}
init
{
b4_sys
{
x1 in [0.25, 0.27]
x2 in [0.08, 0.1]
x3 in [0.25, 0.27]
a in [0, 0]
clock in [0.1, 0.1]
}
}
}