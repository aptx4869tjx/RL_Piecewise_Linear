hybrid reachability
{
state var x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, t, a1, a2, a3, clock
setting
{
fixed steps 0.001
time 150
remainder estimation 1e-3
identity precondition
matlab octagon t,x3
adaptive orders { min 3, max 8 }
cutoff 1e-9
precision 100
output quad3
max jumps 14
print on
}
modes
{
quad_sys
{
nonpoly ode
{
x1' = cos(x8)*cos(x9)*x4 + (sin(x7)*sin(x8)*cos(x9) - cos(x7)*sin(x9))*x5 + (cos(x7)*sin(x8)*cos(x9) + sin(x7)*sin(x9))*x6
x2' = cos(x8)*sin(x9)*x4 + (sin(x7)*sin(x8)*sin(x9) + cos(x7)*cos(x9))*x5 + (cos(x7)*sin(x8)*sin(x9) - sin(x7)*cos(x9))*x6
x3' = sin(x8)*x4 - sin(x7)*cos(x8)*x5 - cos(x7)*cos(x8)*x6
x4' = x12*x5 - x11*x6 - 9.81*sin(x8)
x5' = x10*x6 - x12*x4 + 9.81*cos(x8)*sin(x7)
x6' = x11*x4 - x10*x5 + 9.81*cos(x8)*cos(x7) - 9.81 - a1 / 1.4
x7' = x10 + (sin(x7)*(sin(x8)/cos(x8)))*x11 + (cos(x7)*(sin(x8)/cos(x8)))*x12
x8' = cos(x7)*x11 - sin(x7)*x12
x9' = (sin(x7)/cos(x8))*x11 + (cos(x7)/cos(x8))*x12
x10' = -0.92592592592593*x11*x12 + 18.51851851851852*a2
x11' = 0.92592592592593*x10*x12 + 18.51851851851852*a3
x12' = 0
t' = 1
a1' = 0.0
a2' = 0.0
a3' = 0.0
clock' = 1.0
}
inv
{
clock <= 0.05
}
}
}
jumps
{
quad_sys -> quad_sys
guard
{
clock = 0.05  -30.0 - x1 <= 0  x1 <= 30.0  -30.0 - x2 <= 0  x2 <= 30.0  -30.0 - x3 <= 0  x3 <= 30.0  -30.0 - x4 <= 0  x4 <= 30.0  -30.0 - x5 <= 0  x5 <= 30.0  -30.0 - x6 <= 0  x6 <= 30.0  -30.0 - x7 <= 0  x7 <= 30.0  -30.0 - x8 <= 0  x8 <= 30.0  -30.0 - x9 <= 0  x9 <= 30.0  -30.0 - x10 <= 0  x10 <= 30.0  -30.0 - x11 <= 0  x11 <= 30.0  -30.0 - x12 <= 0  x12 <= 30.0  }
reset
{
a1' := 0.99997675 + 0.97650313 * x1 + 0.99396884 * x2 + -0.999328 * x3 + 0.39805 * x4 + 0.99734354 * x5 + -0.8482175 * x6 + 0.99437153 * x7 + -0.99919116 * x8 + 0.9988217 * x9 + -0.6903647 * x10 + 0.98963547 * x11 + -0.040429253 * x12
a2' := 0.9692769 + -0.9330279 * x1 + -0.33622977 * x2 + -0.9987362 * x3 + 0.09800809 * x4 + 0.32373768 * x5 + 0.9977683 * x6 + -0.99593556 * x7 + 0.0932094 * x8 + 0.8316678 * x9 + -0.99277 * x10 + 0.34637043 * x11 + -0.052681603 * x12
a3' := 0.9988671 + -0.99863726 * x1 + -0.99982923 * x2 + 0.9983208 * x3 + -0.44731924 * x4 + -0.95570195 * x5 + -0.4000205 * x6 + 0.9375414 * x7 + -0.9999609 * x8 + -0.9929565 * x9 + -0.002613315 * x10 + -0.9993124 * x11 + -0.034103002 * x12

clock' := 0.0
}
interval aggregation
}
init
{
quad_sys
{
x1 in [0.35, 0.4]
x2 in [0.35, 0.4]
x3 in [0.35, 0.4]
x4 in [0.35, 0.4]
x5 in [0.35, 0.4]
x6 in [0.35, 0.4]
x7 in [0, 0]
x8 in [0, 0]
x9 in [0, 0]
x10 in [0, 0]
x11 in [0, 0]
x12 in [0, 0]
t in [0, 0]
a1 in [0, 0]
a2 in [0, 0]
a3 in [0, 0]
clock in [0.05, 0.05]
}
}
}